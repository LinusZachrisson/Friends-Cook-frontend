{"version":3,"sources":["UserContext.js","components/RegisterUser.js","components/LoginUser.js","components/UserPage.js","components/RandomRecipes.js","components/Friends.js","components/LikedRecipes.js","components/Navbar.js","App.js","index.js"],"names":["UserContext","React","createContext","defaultValue","RegisterUser","useState","username","setUsername","password","setPassword","user","useContext","onSubmit","e","preventDefault","data","axios","post","withCredentials","then","res","registerNewUser","type","placeholder","value","onChange","target","LoginUser","wrongLogin","setWrongLogin","catch","logInExistingUser","className","UserPage","prop","likedRecepies","setLikedRecepies","useEffect","fetch","json","recepies","i","LikedBy","includes","push","handleOnClick","isRemoved","evt","method","body","JSON","stringify","Id","id","Title","title","ImageUrl","parentNode","myLikes","Remove","headers","map","food","index","href","src","alt","imageurl","onClick","RandomRecipes","recipes","setRecipes","error","setError","fetchRecipes","get","Recipes","Error","err","message","handleClick","textContent","recipe","Friends","friends","setFriends","friendProfile","setFriendProfile","resp","innerText","undefined","friend","_id","LikedRecipes","likedRecipes","setLikedRecipes","isRemove","slice","reverse","length","Navbar","exact","activeClassName","to","path","component","App","newUser","setNewUser","Provider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98154a97.chunk.js","sourcesContent":["import React from \"react\";\n\nconst UserContext = React.createContext({ defaultValue: {} });\n\nexport default UserContext;\n","import React from 'react';\nimport { useState, useContext } from 'react';\nimport axios from 'axios';\nimport UserContext from '../UserContext';\n\nfunction RegisterUser() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const user = useContext(UserContext);\n\n    const registerNewUser = (e) => {\n        e.preventDefault();\n\n        const data = { username, password };\n        axios\n            .post('https://cook-and-friends.herokuapp.com/user/register', data, {\n                withCredentials: true,\n            })\n            .then((res) => {\n                user.setUsername(res.data.username);\n                setUsername('');\n                setPassword('');\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={(e) => registerNewUser(e)}>\n                <h3>Registrera ny användare:</h3>\n                <input\n                    type='text'\n                    placeholder='Välj användarnamn'\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />{' '}\n                <br />\n                <input\n                    type='password'\n                    placeholder='Välj lösenord'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />{' '}\n                <br />\n                <button type='submit'>Registrera</button>\n            </form>\n        </div>\n    );\n}\n\nexport default RegisterUser;\n","import React from 'react';\nimport { useState, useContext } from 'react';\nimport axios from 'axios';\nimport UserContext from '../UserContext';\n\nfunction LoginUser() {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [wrongLogin, setWrongLogin] = useState(false);\n\n    const user = useContext(UserContext);\n\n    const logInExistingUser = (e) => {\n        e.preventDefault();\n\n        const data = { username, password };\n        axios\n            .post('https://cook-and-friends.herokuapp.com/user/login', data, {\n                withCredentials: true,\n            })\n            .then((res) => {\n                user.setUsername(res.data.username);\n                setUsername('');\n                setPassword('');\n                setWrongLogin(false);\n            })\n            .catch(() => {\n                setWrongLogin(true);\n            });\n    };\n\n    return (\n        <div>\n            <form onSubmit={(e) => logInExistingUser(e)}>\n                {wrongLogin && (\n                    <div className='login-error'>\n                        Fel användarnamn eller lösenord. <br />\n                        Försök igen!\n                    </div>\n                )}\n                <input\n                    type='text'\n                    placeholder='Användarnamn'\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                />{' '}\n                <br />\n                <input\n                    type='password'\n                    placeholder='Lösenord'\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />{' '}\n                <br />\n                <button type='submit'>Logga in</button>\n            </form>\n        </div>\n    );\n}\n\nexport default LoginUser;\n","import { useEffect, useState } from 'react';\n\nconst UserPage = (prop) => {\n    const [likedRecepies, setLikedRecepies] = useState([]);\n\n    useEffect(() => {\n        fetch(`https://cook-and-friends.herokuapp.com/readall`)\n            .then((res) => res.json())\n            .then((data) => {\n                let recepies = [];\n                for (let i in data) {\n                    if (data[i].LikedBy.includes(prop.user)) {\n                        recepies.push(data[i]);\n                    }\n                }\n                setLikedRecepies(recepies);\n            });\n    }, [likedRecepies]);\n\n    const handleOnClick = (isRemoved, evt) => {\n        const resp = fetch('https://cook-and-friends.herokuapp.com/write', {\n            method: 'POST',\n            body: JSON.stringify({\n                Id: evt.target.id,\n                Title: evt.target.title,\n                ImageUrl: evt.target.parentNode.id,\n                LikedBy: prop.myLikes,\n                Remove: isRemoved,\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    };\n\n    return (\n        <div className='profile-container'>\n            <p>\n                Gillade recept av <span> {prop.user}</span>\n            </p>\n            <div className='profile-liked-rec-container'>\n                {likedRecepies.map((food, index) => {\n                    return (\n                        <div key={index} className='profile-recipe-con'>\n                            <a\n                                href={'https://www.ica.se/recept/' + food.Id}\n                                target='_blank'\n                            >\n                                <img\n                                    src={food.ImageUrl}\n                                    alt='Food of recepie'\n                                />\n                            </a>{' '}\n                            {/* <a href={\"https://www.ica.se/recept/\" + food.Id}>\n                                <img src={food.ImageUrl} alt=\"Bilden kunde inte laddas\" />\n                            </a> */}\n                            <h4>{food.Title}</h4>\n                            {/* <p>{food.LikedBy}</p> */}\n                            {food.LikedBy.includes(prop.myLikes) ? (\n                                <button\n                                    title={food.Title}\n                                    id={food.Id}\n                                    imageurl={food.ImageUrl}\n                                    onClick={(evt) => handleOnClick(true, evt)}\n                                >\n                                    Ogilla\n                                </button>\n                            ) : (\n                                <button\n                                    title={food.Title}\n                                    id={food.Id}\n                                    imageurl={food.ImageUrl}\n                                    onClick={(evt) => handleOnClick(false, evt)}\n                                >\n                                    {' '}\n                                    Gilla{' '}\n                                </button>\n                            )}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n};\n\nexport default UserPage;\n","import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { BiSearch } from \"react-icons/bi\";\n\nconst RandomRecipes = (prop) => {\n  const [recipes, setRecipes] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    fetchRecipes();\n  }, []);\n\n  const fetchRecipes = () => {\n    axios\n      .get(\"https://cook-and-friends.herokuapp.com/api/\")\n      .then((res) => {\n        if (!res.data.Recipes) {\n          throw Error(\"Recepten kunde tyvärr inte läsas in.\");\n        }\n        setError(null);\n        setRecipes(res.data.Recipes);\n      })\n      .catch((err) => {\n        setError(err.message);\n      });\n  };\n\n  const handleClick = (evt) => {\n    evt.target.textContent = \"Gillat!\";\n    const resp = fetch(\"https://cook-and-friends.herokuapp.com/write\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        Id: evt.target.id,\n        Title: evt.target.title,\n        ImageUrl: evt.target.parentNode.id,\n        LikedBy: prop.user,\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n  };\n\n  return (\n    <div className=\"random-recipes-container\">\n      <p className=\"random-first-text\">\n        Här du hitta nya recept att <span>gilla, laga</span>\n        <br /> och <span>inspirera</span> dina vänner med.\n      </p>\n      <div className=\"random-btns-con\">\n        <a onClick={fetchRecipes} className=\"new-recipes-btn\">\n          Slumpa nya recept\n        </a>\n        <div className=\"inp-sea\">\n          <input type=\"text\" placeholder=\"SÖK...\" />\n          <BiSearch className=\"search-icon\" />\n        </div>\n      </div>\n      <div>\n        {error && (\n          <div className=\"random-recipe-container\">\n            <div className=\"random-first-text\">{error}</div>\n          </div>\n        )}\n        {recipes.map((recipe) => (\n          <div\n            key={recipe.Id}\n            id={recipe.ImageUrl}\n            className=\"random-recipe-box\"\n          >\n            <a\n              href={\"https://www.ica.se/recept/\" + recipe.Id}\n              target=\"_blank\"\n              className=\"random-recipe-container\"\n            >\n              <img src={recipe.ImageUrl} alt=\"Bilden kunde inte laddas\" />\n              <p className=\"random-recipe-title\">{recipe.Title}</p>\n            </a>\n            <button\n              onClick={handleClick}\n              title={recipe.Title}\n              id={recipe.Id}\n              imageurl={recipe.ImageUrl}\n            >\n              Gilla\n            </button>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default RandomRecipes;\n","import React, { useEffect, useState } from 'react';\nimport UserPage from './UserPage';\n\nfunction Friends(prop) {\n    let [friends, setFriends] = useState();\n    let [friendProfile, setFriendProfile] = useState();\n\n    // Hämta användare\n    useEffect(() => {\n        fetch('https://cook-and-friends.herokuapp.com/users/getusers')\n            .then((resp) => resp.json())\n            .then((data) => {\n                setFriends(data);\n            });\n    }, []);\n\n    // Fånga användarnamnet som klickats på\n    const onClick = (e) => {\n        setFriendProfile(e.target.innerText);\n    };\n\n    const GoBack = () => {\n        setFriendProfile(undefined);\n    };\n\n    if (friends === undefined) {\n        return <div className='aside-container loading'>Loading...</div>;\n    } else if (friendProfile) {\n        return (\n            <div className='friends-container'>\n                <button onClick={GoBack}>Back</button>\n                <UserPage user={friendProfile} myLikes={prop.myLikes} />\n            </div>\n        );\n    } else {\n        return (\n            <div className='friends-container'>\n                <h3>Dina vänner</h3>\n                {friends.map((friend) => (\n                    <div className='friend-container'>\n                        <div\n                            key={friend._id}\n                            onClick={onClick}\n                            className='friend-con-name'\n                        >\n                            {friend.username}\n                        </div>\n                        <div>\n                            <button>Avfölj</button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        );\n    }\n}\n\nexport default Friends;\n","import React, { useEffect, useState, useContext } from 'react';\nimport UserContext from '../UserContext';\n\nfunction LikedRecipes(prop) {\n    let [likedRecipes, setLikedRecipes] = useState([]);\n\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        fetch('https://cook-and-friends.herokuapp.com/users/getlikedrecipes')\n            .then((resp) => resp.json())\n            .then((data) => {\n                setLikedRecipes(data);\n            });\n    }, []);\n\n    const handleOnClick = (isRemove, evt) => {\n        if (isRemove) {\n            evt.target.textContent = 'Borttaget!';\n        } else {\n            evt.target.textContent = 'Gillat!';\n        }\n        const resp = fetch('https://cook-and-friends.herokuapp.com/write', {\n            method: 'POST',\n            body: JSON.stringify({\n                Id: evt.target.id,\n                Title: evt.target.title,\n                ImageUrl: evt.target.parentNode.id,\n                LikedBy: user.username,\n                Remove: isRemove,\n            }),\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        });\n    };\n\n    return (\n        <div className='flow-container'>\n            <p className='flow-p'>\n                <span>Behöver du middagstips?</span>\n                <br /> Kolla in vad dina vänner gillar för recept.\n            </p>\n\n            {likedRecipes\n                .slice(0)\n                .reverse()\n                .map((recipe) => (\n                    <div key={recipe._id}>\n                        {recipe.LikedBy.includes(prop.myLikes) &&\n                        recipe.LikedBy.length - 1 === 0 ? (\n                            ''\n                        ) : (\n                            <div\n                                key={recipe._id}\n                                className='flow-recipe-container'\n                                id={recipe.ImageUrl}\n                            >\n                                <a\n                                    href={\n                                        'https://www.ica.se/recept/' + recipe.Id\n                                    }\n                                    target='_blank'\n                                >\n                                    <img\n                                        src={recipe.ImageUrl}\n                                        alt='Bilden kunde inte laddas'\n                                    />\n                                </a>\n                                <p className='flow-recipe-title'>\n                                    {recipe.Title}\n                                </p>{' '}\n                                <div className='flow-likedby'>\n                                    {recipe.LikedBy.length - 1 === 0 ? (\n                                        <p>\n                                            Gillas av{' '}\n                                            <span>{recipe.LikedBy[0]}</span>{' '}\n                                        </p>\n                                    ) : (\n                                        <p>\n                                            {' '}\n                                            <span>\n                                                {recipe.LikedBy[0]}\n                                            </span> och{' '}\n                                            <span>\n                                                {recipe.LikedBy.length - 1}\n                                            </span>{' '}\n                                            vänner till gillar receptet.\n                                        </p>\n                                    )}\n                                </div>\n                                {recipe.LikedBy.includes(prop.myLikes) ? (\n                                    <button\n                                        className='flow-like-btn'\n                                        title={recipe.Title}\n                                        id={recipe.Id}\n                                        imageurl={recipe.ImageUrl}\n                                        onClick={(evt) =>\n                                            handleOnClick(true, evt)\n                                        }\n                                    >\n                                        Ogilla\n                                    </button>\n                                ) : (\n                                    <button\n                                        className='flow-like-btn'\n                                        title={recipe.Title}\n                                        id={recipe.Id}\n                                        imageurl={recipe.ImageUrl}\n                                        onClick={(evt) =>\n                                            handleOnClick(false, evt)\n                                        }\n                                    >\n                                        {' '}\n                                        Gilla{' '}\n                                    </button>\n                                )}\n                            </div>\n                        )}\n                    </div>\n                ))}\n        </div>\n    );\n}\n\nexport default LikedRecipes;\n","import React from 'react';\nimport { NavLink, Link } from 'react-router-dom';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { BiUserCircle, BiSearch, BiHome, BiGroup } from 'react-icons/bi';\n\nimport UserPage from './UserPage';\nimport RandomRecipes from './RandomRecipes';\nimport Friends from './Friends';\nimport LikedRecipes from './LikedRecipes';\n\nfunction Navbar({ user }) {\n    return (\n        <Router>\n            <div className='navbar'>\n                <nav>\n                    <NavLink exact activeClassName='active' to='/'>\n                        <div>\n                            <BiHome />\n                        </div>\n                    </NavLink>\n                    <NavLink exact activeClassName='active' to='/friends'>\n                        <div>\n                            <BiGroup />\n                        </div>\n                    </NavLink>\n                    <NavLink exact activeClassName='active' to='/recipes'>\n                        <div>\n                            <BiSearch />\n                        </div>\n                    </NavLink>\n                    <NavLink exact activeClassName='active' to='/mypage'>\n                        <div>\n                            <BiUserCircle className='navbar-mypage' />\n                        </div>\n                    </NavLink>\n                </nav>\n            </div>\n            <Switch>\n                <Route exact path='/'>\n                    <LikedRecipes myLikes={user}/>\n                </Route>\n                <Route path='/friends'>\n                    <Friends myLikes={user}/>\n                </Route>\n                <Route path='/recipes'>\n                    <RandomRecipes user={user} />\n                </Route>\n                s\n                <Route path='/mypage'>\n                    <UserPage user={user} myLikes={user}/>\n                </Route>\n                <Route path='*' component='' />{' '}\n                {/* Här kan vi lägga till en 404-sida sen */}\n            </Switch>\n        </Router>\n    );\n}\n\nexport default Navbar;\n","import './css/style.css';\nimport { BrowserRouter, Switch, Route, Link } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport RegisterUser from './components/RegisterUser';\nimport UserContext from './UserContext';\nimport axios from 'axios';\nimport LoginUser from './components/LoginUser';\nimport Navbar from './components/Navbar';\n\nfunction App() {\n    const [username, setUsername] = useState();\n    const [newUser, setNewUser] = useState(false);\n\n    useEffect(() => {\n        axios\n            .get('https://cook-and-friends.herokuapp.com/user/islogedin', {\n                withCredentials: true,\n            })\n            .then((res) => {\n                setUsername(res.data.username);\n            });\n    }, []);\n\n    const logOut = () => {\n        axios\n            .post(\n                'https://cook-and-friends.herokuapp.com/user/logout',\n                {},\n                { withCredentials: true }\n            )\n            .then(() => {\n                setUsername();\n            });\n    };\n\n    return (\n        <UserContext.Provider value={{ username: username, setUsername }}>\n            {username !== undefined ? (\n                <div>\n                    <div className='header'>\n                        <button onClick={logOut}>Logga ut</button>{' '}\n                        <p>\n                            Hej, <span>{username}</span>\n                        </p>{' '}\n                        {/* logga ut knapp i komponent för inloggade användare */}\n                    </div>\n                    <Navbar user={username} />\n                </div>\n            ) : (\n                <BrowserRouter>\n                    <div className='startpage-container'>\n                        <h1>Friends&Cook</h1>\n\n                        <Switch>\n                            <Route exact path='/'>\n                                <LoginUser />\n                            </Route>\n                            <Route\n                                exact\n                                path={'/Register'}\n                                component={RegisterUser}\n                                onClick={() => setNewUser(!newUser)}\n                            />\n                        </Switch>\n                        <div className='new-user'>\n                            {!newUser ? (\n                                <Link\n                                    to={'/Register'}\n                                    onClick={() => setNewUser(!newUser)}\n                                >\n                                    Registrera ny användare\n                                </Link>\n                            ) : (\n                                <Link\n                                    to={'/'}\n                                    onClick={() => setNewUser(!newUser)}\n                                >\n                                    Har du redan konto? Logga in\n                                </Link>\n                            )}\n                        </div>\n                    </div>\n                </BrowserRouter>\n            )}\n        </UserContext.Provider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}